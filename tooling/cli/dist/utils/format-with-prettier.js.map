{"version":3,"sources":["../../src/utils/format-with-prettier.ts"],"names":["createFormatFileWithPrettier","prettier","content","resolveConfig","process","cwd","prettierConfig","format","String","parser","formatWithPrettierIfAvailable","require"],"mappings":";;;;;;;;;;;AAEA,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,QAAD;AAAA;AAAA,uEAG/B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACyBD,QAAQ,CAACE,aAAT,CAAuBC,OAAO,CAACC,GAAR,EAAvB,CADzB;;AAAA;AACEC,cAAAA,cADF;AAAA,+CAEGL,QAAQ,CAACM,MAAT,CAAgBC,MAAM,CAACN,OAAD,CAAtB,eACFI,cADE;AAELG,gBAAAA,MAAM,EAAE;AAFH,iBAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAH+B;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArC;;SAWsBC,6B;;;;;2FAAf,kBAA6CR,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGH;AACAD,YAAAA,QAAQ,GAAGU,OAAO,CAAC,UAAD,CAAlB;AAJG;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAOIT,OAPJ;;AAAA;AAAA,8CAUEF,4BAA4B,CAACC,QAAD,CAA5B,CAAuCC,OAAvC,CAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import type { format, resolveConfig } from \"prettier\"\n\nconst createFormatFileWithPrettier = (prettier: {\n  format: typeof format\n  resolveConfig: typeof resolveConfig\n}) => async (content: string) => {\n  const prettierConfig = await prettier.resolveConfig(process.cwd())\n  return prettier.format(String(content), {\n    ...prettierConfig,\n    parser: \"typescript\",\n  })\n}\n\nexport async function formatWithPrettierIfAvailable(content: string) {\n  let prettier\n  try {\n    // eslint-disable-next-line global-require\n    prettier = require(\"prettier\")\n  } catch {\n    // silent exit if prettier is not installed\n    return content\n  }\n\n  return createFormatFileWithPrettier(prettier)(content)\n}\n"],"file":"format-with-prettier.js"}