{"description":"React hook that provides the props that should be spread on to\ninput fields (`input`, `select`, `textarea`, etc.).\n\nIt provides a convenient way to control a form fields, validation\nand helper text.","displayName":"useFormControl","methods":[],"props":{"id":{"defaultValue":null,"description":"","name":"id","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/use-form-control.d.ts","name":"UseFormControlProps"},"required":false,"type":{"name":"string"}},"onFocus":{"defaultValue":null,"description":"","name":"onFocus","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/use-form-control.d.ts","name":"UseFormControlProps"},"required":false,"type":{"name":"((event: FocusEvent<T>) => void)"}},"onBlur":{"defaultValue":null,"description":"","name":"onBlur","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/use-form-control.d.ts","name":"UseFormControlProps"},"required":false,"type":{"name":"((event: FocusEvent<T>) => void)"}},"disabled":{"defaultValue":null,"description":"","name":"disabled","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/use-form-control.d.ts","name":"UseFormControlProps"},"required":false,"type":{"name":"boolean"}},"readOnly":{"defaultValue":null,"description":"","name":"readOnly","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/use-form-control.d.ts","name":"UseFormControlProps"},"required":false,"type":{"name":"boolean"}},"required":{"defaultValue":null,"description":"","name":"required","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/use-form-control.d.ts","name":"UseFormControlProps"},"required":false,"type":{"name":"boolean"}},"isRequired":{"defaultValue":null,"description":"If `true`, the form control will be required. This has 2 side effects:\n- The `FormLabel` will show a required indicator\n- The form element (e.g, Input) will have `aria-required` set to `true`","name":"isRequired","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/form-control.d.ts","name":"FormControlOptions"},"required":false,"type":{"name":"boolean"}},"isDisabled":{"defaultValue":null,"description":"If `true`, the form control will be disabled. This has 2 side effects:\n- The `FormLabel` will have `data-disabled` attribute\n- The form element (e.g, Input) will be disabled","name":"isDisabled","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/form-control.d.ts","name":"FormControlOptions"},"required":false,"type":{"name":"boolean"}},"isInvalid":{"defaultValue":null,"description":"If `true`, the form control will be invalid. This has 2 side effects:\n- The `FormLabel` and `FormErrorIcon` will have `data-invalid` set to `true`\n- The form element (e.g, Input) will have `aria-invalid` set to `true`","name":"isInvalid","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/form-control.d.ts","name":"FormControlOptions"},"required":false,"type":{"name":"boolean"}},"isReadOnly":{"defaultValue":null,"description":"If `true`, the form control will be readonly","name":"isReadOnly","parent":{"fileName":"/data/tmp/chakra-ui-sq1/packages/form-control/dist/types/form-control.d.ts","name":"FormControlOptions"},"required":false,"type":{"name":"boolean"}}}}