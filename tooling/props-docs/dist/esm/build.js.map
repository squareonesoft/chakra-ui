{"version":3,"sources":["../../src/build.ts"],"names":["glob","path","promisify","writeFileSync","docgen","mkdirp","propNames","globAsync","excludedPropNames","concat","rootDir","join","__dirname","sourcePath","outputPath","tsConfigPath","main","componentFiles","findComponentFiles","length","log","parsedInfo","parseInfo","componentInfo","extractComponentInfo","writeComponentInfoFiles","writeIndexCJS","writeIndexESM","require","module","catch","console","error","tsFiles","cwd","filter","f","includes","filePaths","parse","withCustomConfig","shouldRemoveUndefinedFromOptional","propFilter","prop","component","isStyledSystemProp","name","isHTMLElementProp","parent","fileName","isHook","startsWith","isTypeScriptNative","flatMap","file","absoluteFilePath","docs","reduce","acc","def","Object","keys","props","createUniqueName","displayName","existing","prev","String","toLowerCase","exportName","push","importPath","info","filePath","content","JSON","stringify","cjsIndexFilePath","cjsExports","map","esmIndexFilePath","esmPropImports","esmPropExports","args"],"mappings":"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","sourcesContent":["import \"regenerator-runtime/runtime\"\nimport glob from \"glob\"\nimport path from \"path\"\nimport { promisify } from \"util\"\nimport { writeFileSync } from \"fs\"\nimport * as docgen from \"react-docgen-typescript\"\nimport { ComponentDoc } from \"react-docgen-typescript\"\nimport mkdirp from \"mkdirp\"\nimport { propNames } from \"@chakra-ui/styled-system\"\n\ntype ComponentInfo = {\n  def: ComponentDoc\n  displayName: string\n  fileName: string\n  exportName: string\n  importPath: string\n}\n\nconst globAsync = promisify(glob)\n\nconst excludedPropNames = propNames.concat([\n  \"as\",\n  \"apply\",\n  \"sx\",\n  \"__css\",\n  \"css\",\n])\n\nconst rootDir = path.join(__dirname, \"..\", \"..\", \"..\", \"..\")\nconst sourcePath = path.join(rootDir, \"packages\")\nconst outputPath = path.join(__dirname, \"..\", \"components\")\n\nconst tsConfigPath = path.join(sourcePath, \"..\", \"tsconfig.json\")\n\nexport async function main() {\n  const componentFiles = await findComponentFiles()\n\n  if (componentFiles.length) {\n    await mkdirp(outputPath)\n  }\n\n  log(\"Parsing files for component types...\")\n  const parsedInfo = parseInfo(componentFiles)\n\n  log(\"Extracting component info...\")\n  const componentInfo = extractComponentInfo(parsedInfo)\n\n  log(\"Writing component info files...\")\n  writeComponentInfoFiles(componentInfo)\n\n  log(\"Writing index files...\")\n  writeIndexCJS(componentInfo)\n  writeIndexESM(componentInfo)\n\n  log(`Processed ${componentInfo.length} components`)\n}\n\nif (require.main === module) {\n  // run main function if called via cli\n  main().catch(console.error)\n}\n\n/**\n * Find all TypeScript files which could contain component definitions\n */\nasync function findComponentFiles() {\n  const tsFiles = await globAsync(\"react/**/src/**/*.@(ts|tsx)\", {\n    cwd: sourcePath,\n  })\n\n  return tsFiles.filter((f) => !f.includes(\"stories\"))\n}\n\n/**\n * Parse files with react-doc-gen-typescript\n */\nfunction parseInfo(filePaths: string[]) {\n  const { parse } = docgen.withCustomConfig(tsConfigPath, {\n    shouldRemoveUndefinedFromOptional: true,\n    propFilter: (prop, component) => {\n      const isStyledSystemProp = excludedPropNames.includes(prop.name)\n      const isHTMLElementProp =\n        prop.parent?.fileName.includes(\"node_modules\") ?? false\n      const isHook = component.name.startsWith(\"use\")\n      const isTypeScriptNative =\n        prop.parent?.fileName.includes(\"node_modules/typescript\") ?? false\n\n      return (\n        (isHook && !isTypeScriptNative) ||\n        !(isStyledSystemProp || isHTMLElementProp)\n      )\n    },\n  })\n\n  return filePaths.flatMap((file) => {\n    const absoluteFilePath = path.join(sourcePath, file)\n    return parse(absoluteFilePath)\n  })\n}\n\n/**\n * Extract meta data of component docs\n */\nfunction extractComponentInfo(docs: ComponentDoc[]) {\n  return docs.reduce((acc, def) => {\n    if (!Object.keys(def.props || {}).length) {\n      return acc\n    }\n\n    function createUniqueName(displayName: string) {\n      const existing = acc.filter(\n        (prev) =>\n          String(prev.def.displayName).toLowerCase() ===\n          displayName.toLowerCase(),\n      )\n\n      if (!existing.length) {\n        return displayName\n      }\n\n      return `${displayName}${existing.length}`\n    }\n\n    const exportName = createUniqueName(def.displayName)\n    const fileName = `${exportName}.json`\n\n    acc.push({\n      def,\n      displayName: def.displayName,\n      fileName,\n      exportName,\n      importPath: `../components/${fileName}`,\n    })\n    return acc\n  }, [] as ComponentInfo[])\n}\n\n/**\n * Write component info as JSON to disk\n */\nfunction writeComponentInfoFiles(componentInfo: ComponentInfo[]) {\n  for (const info of componentInfo) {\n    const filePath = path.join(outputPath, info.fileName)\n    const content = JSON.stringify(info.def)\n    writeFileSync(filePath, content)\n  }\n}\n\n/**\n * Create and write the index file in CJS format\n */\nfunction writeIndexCJS(componentInfo: ComponentInfo[]) {\n  const cjsIndexFilePath = path.join(__dirname, \"index.js\")\n  const cjsExports = componentInfo.map(\n    ({ displayName, importPath }) =>\n      `module.exports['${displayName}'] = require('${importPath}')`,\n  )\n  writeFileSync(cjsIndexFilePath, cjsExports.join(\"\\n\"))\n}\n\n/**\n * Create and write the index file in ESM format\n */\nfunction writeIndexESM(componentInfo: ComponentInfo[]) {\n  const esmIndexFilePath = path.join(__dirname, \"..\", \"esm\", \"index.js\")\n\n  const esmPropImports = componentInfo\n    .map(\n      ({ exportName, importPath }) =>\n        `import ${exportName}Import from '${importPath}'`,\n    )\n    .join(\"\\n\")\n\n  const esmPropExports = componentInfo\n    .map(({ exportName }) => `export const ${exportName} = ${exportName}Import`)\n    .join(\"\\n\")\n\n  writeFileSync(\n    esmIndexFilePath,\n    `${esmPropImports}\n${esmPropExports}`,\n  )\n}\n\nfunction log(...args: unknown[]) {\n  console.info(`[props-docs]`, ...args)\n}\n"],"file":"build.js"}