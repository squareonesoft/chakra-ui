"use strict";
const crypto_1 = require("crypto");
const core_1 = require("@swc-node/core");
const Cache = new Map();
function getJestTransformConfig(jestConfig) {
    var _a, _b;
    if ('transformerConfig' in jestConfig) {
        // jest 27
        return jestConfig.transformerConfig;
    }
    if ('transform' in jestConfig) {
        // jest 26
        return (_b = (_a = jestConfig.transform.find(([, transformerPath]) => transformerPath === __filename)) === null || _a === void 0 ? void 0 : _a[2]) !== null && _b !== void 0 ? _b : {};
    }
    return {};
}
module.exports = {
    process(src, path, jestConfig) {
        if (/\.(t|j)sx?$/.test(path)) {
            // sha1 is fast, and we don't care about security here
            const cacheHash = (0, crypto_1.createHash)('sha1');
            cacheHash.update(src);
            const hash = cacheHash.digest('hex');
            const cacheKey = `${path}-${hash}`;
            if (Cache.has(cacheKey)) {
                return Cache.get(cacheKey);
            }
            const output = (0, core_1.transformJest)(src, path, getJestTransformConfig(jestConfig));
            Cache.set(cacheKey, output);
            return output;
        }
        return src;
    },
};
//# sourceMappingURL=index.js.map