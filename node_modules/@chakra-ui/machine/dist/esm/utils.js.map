{"version":3,"sources":["../../src/utils.ts"],"names":["isString","value","isArray","Array","isObject","isFunction","keys","Object","toArray","v","toEvent","event","type","toTarget","target","toTransition","transition","currentState","_transition","check","t","isTargetless","actions","map","INTERNAL_EVENTS","INIT","AFTER","EVERY","SEND_PARENT","STOP","SYNC","MACHINE_TYPES","MACHINE","ACTOR","toComputed","obj","fromEntries","entries","k","state","context","isGuardHelper","exec"],"mappings":"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","sourcesContent":["import { Dict, StateMachine as S } from \"./types\"\n\nexport const isString = (value: any): value is string =>\n  typeof value === \"string\"\n\nexport const isArray = (value: any): value is any[] => Array.isArray(value)\n\nexport const isObject = (value: any): value is Dict =>\n  value != null && typeof value === \"object\" && !isArray(value)\n\nexport const isFunction = (value: any): value is Function =>\n  typeof value === \"function\"\n\nexport const keys = <T extends Record<string, any>>(value: T) =>\n  Object.keys(value) as string[]\n\nexport const toArray = <T>(v: T | T[] = []) => (isArray(v) ? v : [v])\n\nexport function toEvent<T extends string | S.Event>(event: T) {\n  return isString(event) ? ({ type: event } as S.EventObject) : event\n}\n\nexport function toTarget<T extends string | { target?: string }>(target: T) {\n  return isString(target) ? { target } : target\n}\n\nexport function toTransition<\n  TContext extends Dict,\n  TState extends string,\n  TEvent extends S.EventObject\n>(\n  transition: S.Transitions<TContext, TState, TEvent> | undefined,\n  currentState?: string | null,\n) {\n  const _transition = isString(transition) ? toTarget(transition) : transition\n\n  const check = (t: S.TransitionDefinition<TContext, string, TEvent>) => {\n    const isTargetless = t.actions && !t.target\n    if (isTargetless && currentState) t.target = currentState\n    return t\n  }\n\n  if (isArray(_transition)) {\n    return _transition.map(check)\n  }\n\n  if (isObject(_transition)) {\n    return check(_transition)\n  }\n}\n\nexport const INTERNAL_EVENTS = {\n  INIT: \"machine.init\",\n  AFTER: \"machine.after\",\n  EVERY: \"machine.every\",\n  SEND_PARENT: \"machine.send-parent\",\n  STOP: \"machine.stop\",\n  SYNC: \"machine.sync\",\n}\n\nexport const MACHINE_TYPES = {\n  MACHINE: \"machine\",\n  ACTOR: \"machine.actor\",\n}\n\nexport const toComputed = (obj: Dict = {}) =>\n  Object.fromEntries(\n    Object.entries(obj).map(([k, v]) => [k, (state: any) => v(state.context)]),\n  )\n\nexport function isGuardHelper(value: unknown): value is { exec: Function } {\n  return isObject(value) && value.exec != null\n}\n"],"file":"utils.js"}